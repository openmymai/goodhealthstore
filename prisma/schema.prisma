// prisma/schema.prisma

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"] // Keep the binary target from previous step
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  content     String   @db.Text
  excerpt     String?  @db.Text
  imageUrl    String?
  published   Boolean  @default(false)
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// --- START: E-commerce Models ---

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  slug        String    @unique
  description String?   @db.Text
  imageUrl    String?
  products    Product[] // Relation to Product model

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id            Int       @id @default(autoincrement())
  name          String
  slug          String    @unique
  description   String    @db.Text
  price         Decimal   @db.Decimal(10, 2) // Example: Up to 10 digits total, 2 decimal places
  imageUrl      String?
  stockQuantity Int       @default(0) // Default stock to 0
  isPublished   Boolean   @default(false) // Published status for visibility
  sku           String?   @unique // Optional: Stock Keeping Unit

  // Foreign key for Category (optional relationship)
  categoryId    Int?
  category      Category? @relation(fields: [categoryId], references: [id])

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Add relation to OrderItem later if needed for order history
  // orderItems    OrderItem[]
}

// --- END: E-commerce Models ---