services:
  app:
    container_name: goodhealthstore_app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${PORT:-3000}:3000' # Map host port to container port 3000
    depends_on:
      - db # Make sure db starts before app
    environment:
      # Pass the database URL from the .env file on the host to the container
      DATABASE_URL: ${DATABASE_URL}
      # Ensures Next.js runs in development mode inside container (adjust for production)
      NODE_ENV: development
    volumes:
      - .:/app # Mount current directory into /app in container for hot-reloading
      # Add node_modules volume to prevent host node_modules from overwriting container's
      - /app/node_modules
      # Add .next volume for build cache persistence
      - /app/.next
    # command: bun run dev # Command to run the app (handled by Dockerfile's CMD)

  db:
    container_name: goodhealthstore_db
    image: postgres:16 # Use a specific Postgres version
    ports:
      - '5432:5432' # Map host port 5433 to container port 5432 (avoid conflict if you have local postgres)
    environment:
      POSTGRES_USER: goodhealthuser # Must match DATABASE_URL
      POSTGRES_PASSWORD: zse4%RDX # Must match DATABASE_URL
      POSTGRES_DB: goodhealthdb # Must match DATABASE_URL
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist database data

volumes:
  postgres_data: # Define the named volume
